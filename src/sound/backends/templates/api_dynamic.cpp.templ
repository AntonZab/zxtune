  class DynamicApi : public Api
  {
  public:
    explicit DynamicApi(SharedLibrary::Ptr lib)
      : Lib(lib)
    {
      Log::Debug(THIS_MODULE, "Library loaded");
    }

    virtual ~DynamicApi()
    {
      Log::Debug(THIS_MODULE, "Library unloaded");
    }

    <TMPL_LOOP NAME=FUNCTIONS>
    virtual <TMPL_VAR NAME=DECLARATION>
    {
      static const char NAME[] = "<TMPL_VAR NAME=NAME>";
      typedef <TMPL_VAR NAME=RETTYPE>(<TMPL_VAR NAME=CALLTYPE> *FunctionType)(<TMPL_VAR NAME=PARAMTYPES>);
      const FunctionType func = Lib.GetSymbol<FunctionType>(NAME);
      return func(<TMPL_VAR NAME=PARAMNAMES>);
    }
    </TMPL_LOOP>
  private:
    const SharedLibraryAdapter Lib;
  };
